2.1 假设你要编写一个记账的应用程序。
你每天都将所有的支出记录下来，并在月底统计支出，算算当月花了多少钱。因此，
你执行的插入操作很多，但读取操作很少。该使用数组还是链表呢？
  >> 由于插入比较多，读取很少，所以链表比较适合

2.2 假设你要为饭店创建一个接受顾客点菜单的应用程序。这个应用程序存储一系列点菜
单。服务员添加点菜单，而厨师取出点菜单并制作菜肴。这是一个点菜单队列：服务
员在队尾添加点菜单，厨师取出队列开头的点菜单并制作菜肴。
你使用数组还是链表来实现这个队列呢？（提示：链表擅长插入和删除，而数组擅长
随机访问。在这个应用程序中，你要执行的是哪些操作呢？）
  >>加菜单在队尾加入，厨师从队头取出，数据的添加和删除比较频繁，链表比较适合

2.3 我们来做一个思考实验。假设Facebook记录一系列用户名，每当有用户试图登录
Facebook时，都查找其用户名，如果找到就允许用户登录。由于经常有用户登录
Facebook，因此需要执行大量的用户名查找操作。假设Facebook使用二分查找算法，
而这种算法要求能够随机访问——立即获取中间的用户名。考虑到这一点，应使用数
组还是链表来存储用户名呢？
  >>随机访问数据的话，数组比较合适

2.4 经常有用户在Facebook注册。假设你已决定使用数组来存储用户名，在插入方面数组
有何缺点呢？具体地说，在数组中添加新用户将出现什么情况？
  >>数组插入前，需要把该数据后面的数据进行向后移动

2.5 实际上，Facebook存储用户信息时使用的既不是数组也不是链表。假设Facebook使用
的是一种混合数据：链表数组。这个数组包含26个元素，每个元素都指向一个链表。
例如，该数组的第一个元素指向的链表包含所有以A打头的用户名，第二个元素指向的
链表包含所有以B打头的用户名，以此类推。
假设Adit B在Facebook注册，而你需要将其加入前述数据结构中。因此，你访问数组的
第一个元素，再访问该元素指向的链表，并将Adit B添加到这个链表末尾。现在假设你
要查找Zakhir H。因此你访问第26个元素，再在它指向的链表（该链表包含所有以z打
头的用户名）中查找Zakhir H。
请问，相比于数组和链表，这种混合数据结构的查找和插入速度更慢还是更快？你不
必给出大O运行时间，只需指出这种新数据结构的查找和插入速度更快还是更慢。
  >>查找速度：数组 > 链表数组 > 链表
    插入速度：链表数组 > 链表 > 数组