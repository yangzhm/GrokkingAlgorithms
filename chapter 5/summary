第五章 散列表

一、散列函数
  满足两个条件：
  1.必须是一致的，同样的输入输出要一致
  2.应将不同的输入映射到不同的数字。

二、散列表
  散列表适合用于：
  1.模拟映射关系；
  2.防止重复；
  2.缓存/记住数据，以免服务器再通过处理来生成它们。

三、冲突
  不同的输入被映射到了同一个位置就产生了冲突。
  冲突的教训：
  1.散列函数很重要。最理想的情况是，散列函数将键均匀地映射到散列表的不同位置。
  2.如果散列表存储的链表很长，散列表的速度将急剧下降。

四、性能
  时间复杂度
  平均情况：查找O(1)、插入O(1)、删除O(1)
  最糟情况：查找O(n)、插入O(n)、删除O(n)

  避免冲突的两个方面：
  1.较低的填装因子   ---- 散列表包含的元素数/位置总数
  2.良好的散列函数


本章总结：
 你可以结合散列函数和数组来创建散列表。
 冲突很糟糕，你应使用可以最大限度减少冲突的散列函数。
 散列表的查找、插入和删除速度都非常快。
 散列表适合用于模拟映射关系。
 一旦填装因子超过0.7，就该调整散列表的长度。
 散列表可用于缓存数据（例如，在Web服务器上）。
 散列表非常适合用于防止重复。