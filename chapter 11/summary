第11章 接下来做什么

一、树
  二叉查找树：对于其中的每个节点，左子节点的值都比它小，而右子节点的值都比它大。
  数组与二叉查找树时间对比：
        数组       二叉查找树
  查找  O(log(n))  O(log(n))
  插入  O(n)       O(log(n))
  删除  O(n)       O(log(n))

  二叉查找树高级结构：B树，红黑树，堆，伸展树。

二、反向索引
  反向索引（inverted index）：一个散列表，将单词映射到包含它的页面。

三、傅里叶变换
  傅里叶变换非常适合用于处理信号，可使用它来压缩音乐。
  傅里叶变换还被用来地震预测和DNA分析。

四、并行算法
  增加一个内核，算法的速度也不可能提高一倍，其中的原因有两个：
    1.并行性管理开销
    2.负载均衡

五、MapReduce
  MapReduce是一种流行的分布式算法，可通过流行的开源工具Apache Hadoop来使用它。
  分布式算法非常适合用于在短时间内完成海量工作，
  其中的MapReduce基于两个简单的理念：映射（map）函数和归并（reduce）函数。

六、布隆过滤器和HypterLogLog
  布隆过滤器是一种概率型数据结构，它提供的答案有可能不对，但很可能是正确的。
  布隆过滤器非常适合用于不要求答案绝对准确的情况。
  面临海量数据且只要求答案八九不离十时，可考虑使用概率型算法！

七、SHA算法
  SHA是一个散列函数，它生成一个散列值——一个较短的字符串。
  SHA应用：比较文件、检查密码。

八、局部敏感的散列算法
  Simhash是局部敏感的散列函数，有以下应用：
    1.Google使用Simhash来判断网页是否已搜集。
    2.老师可以使用Simhash来判断学生的论文是否是从网上抄的。
    3.Scribd允许用户上传文档或图书，以便与人分享，但不希望用户上传有版权的内容！这个
      网站可使用Simhash来检查上传的内容是否与小说《哈利·波特》类似，如果类似，就自
      动拒绝。

九、Diffie-Hellman 密钥交换
  Diffie-Hellman算法解决了如下两个问题：
    1.双方无需知道加密算法。他们不必会面协商要使用的加密算法。
    2.要破解加密的消息比登天还难。
  Diffie-Hellman使用两个密钥：公钥和私钥。

十、线性规划
  线性规划用于在给定约束条件下最大限度地改善指定的指标。
  线性规划使用Simplex算法。