4.1 请编写前述sum函数的代码。
    def sum(arr):
        if len(arr) == 0:
            return 0
        return arr[0] + sum(arr[1:])

4.2 编写一个递归函数来计算列表包含的元素数。
    def count(list):
        if len(list) == 0:
            return 0
        return 1 + count(list[1:])

4.3 找出列表中最大的数字。
    def max(list):
        if len(list) == 2:
            return list[0] if list[0] > list[1] else list[1]
        submax = max(list[1:])
        return list[0] if list[0] > submax else submax

4.4 还记得第1章介绍的二分查找吗？它也是一种分而治之算法。你能找出二分查找算法的基线条件和递归条件吗？
    二分查找的基线条件是数组只包含一个元素。如果要查找的值与这个元素相同，就找到了！否则，就说明它不在数组中。
    在二分查找的递归条件中，你把数组分成两半，将其中一半丢弃，并对另一半执行二分查找。

4.5 打印数组中每个元素的值。
    O(n)

4.6 将数组中每个元素的值都乘以2。
    O(n)

4.7 只将数组中第一个元素的值乘以2。
    O(1)

4.8 根据数组包含的元素创建一个乘法表，即如果数组为[2, 3, 7, 8, 10]，首先将每个元素都乘以2，再将每个元素都乘以3，然后将每个元素都乘以7，以此类推。
    O(n^2)