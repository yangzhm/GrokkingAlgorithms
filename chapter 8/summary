第8章 贪婪算法

一、贪婪算法的做法
  贪婪算法很简单：每步都采取最优的做法。用专业术语说，就是每步都选择局部最优解，最终得到的就是全局最优解。

二、近似算法
  在获得精确解需要的时间太长时，可使用近似算法。
  判断近似算法优劣的标准如下：
    1.速度有多快；
    2.得到的近似解与最优解的接近程度。

三、集合
  集合类似于列表，只是不能包含重复的元素。
  集合运算：并集、交集和差集。
    1.并集意味着将集合合并。
    2.交集意味着找出两个集合中都有的元素。
    3.差集意味着将从一个集合中剔除出现在另一个集合中的元素。

四、NP完全问题
  1.元素较少时算法的运行速度非常快，但随着元素数量的增加，速度会变得非常慢。
  2.涉及“所有组合”的问题通常是NP完全问题。
  3.不能将问题分成小问题，必须考虑各种可能的情况。这可能是NP完全问题。
  4.如果问题涉及序列（如旅行商问题中的城市序列）且难以解决，它可能就是NP完全问题。
  5.如果问题涉及集合（如广播台集合）且难以解决，它可能就是NP完全问题。
  6.如果问题可转换为集合覆盖问题或旅行商问题，那它肯定是NP完全问题。

五、小结
  1.贪婪算法寻找局部最优解，企图以这种方式获得全局最优解。
  2.对于NP完全问题，还没有找到快速解决方案。
  3.面临NP完全问题时，最佳的做法是使用近似算法。
  4.贪婪算法易于实现、运行速度快，是不错的近似算法。